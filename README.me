# Interactive Layout Builder com Tailwind CSS

Este projeto é um website interativo que auxilia os usuários na criação de layouts modernos utilizando Flexbox e Grid. Com uma interface intuitiva e responsiva, o sistema permite a manipulação direta dos elementos através do mouse—facilitando redimensionamento, reposicionamento e reorganização dos componentes—enquanto gera automaticamente o código correspondente com classes do Tailwind CSS. O usuário pode, então, exportar o código para integrá-lo facilmente em seus projetos.

## Funcionalidades

- **Interface Interativa e Responsiva**  
  Adaptável a diferentes dispositivos, proporcionando uma experiência consistente em desktops e mobile.

- **Manipulação Direta com o Mouse**  
  Permite arrastar, redimensionar e reposicionar os elementos diretamente na interface, eliminando a necessidade de controles deslizantes.

- **Criação Visual de Layouts com Flexbox e Grid**  
  Oferece ferramentas para configurar alinhamento, espaçamento e distribuição dos elementos, facilitando a criação de layouts organizados e responsivos.

- **Geração Automática de Código**  
  Enquanto o usuário configura o layout, o sistema gera e exibe automaticamente o código com classes do Tailwind CSS, atualizado em tempo real.

- **Exportação de Código**  
  Possibilita a exportação do código gerado para que o usuário possa integrá-lo facilmente em outros projetos.

- **Design Moderno e Intuitivo**  
  Utiliza uma paleta de cores vibrante e elementos visuais modernos. As áreas vazias exibem um fundo com um ícone “+”, indicando onde novos componentes podem ser adicionados.

## Tecnologias Utilizadas

### Frameworks e Bibliotecas Principais

- **Next.js** – Framework React para construção de aplicações web modernas e escaláveis.
- **React** – Biblioteca para construção de interfaces de usuário.
- **Tailwind CSS** – Estilização rápida e responsiva, complementada por *tailwindcss-animate* para animações.
- **Radix UI** – Conjunto de componentes acessíveis e sem estilos para construção de interfaces robustas.

### Outras Dependências e Utilitários

- **@hookform/resolvers & react-hook-form** – Gerenciamento e validação de formulários.
- **Zod** – Validação de esquemas de dados.
- **next-themes** – Gerenciamento de temas (claro/escuro).
- **autoprefixer** – Automatiza a adição de prefixos CSS.
- **class-variance-authority & tailwind-merge** – Utilitários para manipulação e mesclagem de classes Tailwind.
- **Radix UI Components** – Diversos pacotes (accordion, alert-dialog, aspect-ratio, avatar, checkbox, collapsible, context-menu, dialog, dropdown-menu, hover-card, label, menubar, navigation-menu, popover, progress, radio-group, scroll-area, select, separator, slider, slot, switch, tabs, toast, toggle, toggle-group, tooltip) para construir componentes interativos e acessíveis.
- **cmdk** – Criação de menus e comandos.
- **date-fns** – Manipulação e formatação de datas.
- **embla-carousel-react** – Criação de carrosséis responsivos.
- **input-otp** – Componentes para entrada de códigos OTP.
- **lucide-react** – Biblioteca de ícones.
- **react-day-picker** – Componente para seleção de datas.
- **react-resizable-panels** – Painéis redimensionáveis.
- **recharts** – Criação de gráficos e visualizações de dados.
- **sonner** – Sistema de notificações.
- **vaul** – (Utilizado para gerenciamento de estado ou outra finalidade específica, conforme a implementação.)

## Instalação e Execução

Siga os passos abaixo para executar o projeto localmente:

1. **Clone o repositório**:
   ```bash
   git clone https://github.com/seu-usuario/nome-do-repositorio.git
